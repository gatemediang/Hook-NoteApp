{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","todos","map","key","Header","isInitialMount","useRef","console","log","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","textAlign","marginBottom","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","name","target","TodoContainer","setTodos","show","setShow","axios","get","then","response","data","newTodo","uuid","v4","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.518bca3a.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst TodoItem = (props) => {\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#d35e0f\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  };\r\n\r\n  const { completed, id, title } = props.todo;\r\n  useEffect(() => {\r\n    return () => {\r\n      alert(\"Item about to be deleted!\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <li className=\"todo-item\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={completed}\r\n        onChange={() => props.handleChangeProps(id)}\r\n      />\r\n      <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\r\n      <span style={completed ? completedStyle : null}>{title}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = (props) => {\r\n  return (\r\n    <div>\r\n      {props.todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleChangeProps={props.handleChangeProps}\r\n          deleteTodoProps={props.deleteTodoProps}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodosList;\r\n","/*import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  componentDidUpdate(prevProps, prevState) {\r\n    var x = Math.floor(Math.random() * 256);\r\n    var y = Math.floor(Math.random() * 256);\r\n    var z = Math.floor(Math.random() * 256);\r\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n    if (prevProps.headerSpan !== this.props.headerSpan) {\r\n      document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n      document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const headerStyle = {\r\n      padding: \"20px 0\",\r\n      lineHeight: \"2em\"\r\n    };\r\n    return (\r\n      <header style={headerStyle}>\r\n        <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n          Simple Todo App <span id=\"inH1\"></span>\r\n        </h1>\r\n        <p style={{ fontSize: \"19px\" }}>\r\n          Please add to-dos item(s) through the input field\r\n        </p>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;*/\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst Header = (props) => {\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"2em\",\r\n  };\r\n\r\n  const isInitialMount = useRef(true);\r\n\r\n  console.log(isInitialMount);\r\n\r\n  useEffect(() => {\r\n    var x = Math.floor(Math.random() * 256);\r\n    var y = Math.floor(Math.random() * 256);\r\n    var z = Math.floor(Math.random() * 256);\r\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n    } else {\r\n      document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n      document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n    }\r\n  }, [props.headerSpan]);\r\n\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1\r\n        style={{\r\n          fontSize: \"25px\",\r\n          textAlign: \"center\",\r\n          marginBottom: \"15px\",\r\n          color: \"#038203\",\r\n        }}\r\n      >\r\n        Hook NoteApp <span id=\"inH1\"></span>\r\n      </h1>\r\n      <p\r\n        style={{\r\n          fontSize: \"19px\",\r\n          fontStyle: \"italic\",\r\n          textAlign: \"center\",\r\n          color: \"#038203\",\r\n        }}\r\n      >\r\n        Please add to-dos item(s) through the input field\r\n      </p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/*import React, { Component } from \"react\";\r\nclass InputTodo extends Component {\r\n  state = {\r\n    title: \"\",\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodoProps(this.state.title);\r\n    this.setState({\r\n      title: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Add todo...\"\r\n          value={this.state.title}\r\n          name=\"title\"\r\n          onChange={this.onChange}\r\n        />\r\n        <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default InputTodo;*/\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst InputTodo = (props) => {\r\n  const [inputText, setInputText] = useState({\r\n    title: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputText({\r\n      ...inputText,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addTodoProps(inputText.title);\r\n    setInputText({\r\n      title: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        placeholder=\"Add todo...\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputTodo;\r\n","/*import React from \"react\";\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\n\r\nimport axios from \"axios\";\r\nimport uuid from \"uuid\";\r\n\r\nclass TodoContainer extends React.Component {\r\n  state = {\r\n    todos: [],\r\n    show: false,\r\n  };\r\n\r\n  handleChange = (id) => {\r\n    this.setState({\r\n      todos: this.state.todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      }),\r\n      show: !this.state.show,\r\n    });\r\n  };\r\n\r\n  delTodo = (id) => {\r\n    this.setState({\r\n      todos: [\r\n        ...this.state.todos.filter((todo) => {\r\n          return todo.id !== id;\r\n        }),\r\n      ],\r\n    });\r\n  };\r\n\r\n  addTodoItem = (title) => {\r\n    const newTodo = {\r\n      id: uuid.v4(),\r\n      title: title,\r\n      completed: false,\r\n    };\r\n    this.setState({\r\n      todos: [...this.state.todos, newTodo],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then((response) => this.setState({ todos: response.data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header headerSpan={this.state.show} />\r\n        <InputTodo addTodoProps={this.addTodoItem} />\r\n        <TodosList\r\n          todos={this.state.todos}\r\n          handleChangeProps={this.handleChange}\r\n          deleteTodoProps={this.delTodo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoContainer;*/\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\n\r\nimport axios from \"axios\";\r\nimport uuid from \"uuid\";\r\n\r\nconst TodoContainer = (props) => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleChange = (id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n    setShow(!show);\r\n  };\r\n\r\n  const delTodo = (id) => {\r\n    setTodos([\r\n      ...todos.filter((todo) => {\r\n        return todo.id !== id;\r\n      }),\r\n    ]);\r\n  };\r\n\r\n  const addTodoItem = (title) => {\r\n    const newTodo = {\r\n      id: uuid.v4(),\r\n      title: title,\r\n      completed: false,\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then((response) => setTodos(response.data));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header headerSpan={show} />\r\n      <InputTodo addTodoProps={addTodoItem} />\r\n      <TodosList\r\n        todos={todos}\r\n        handleChangeProps={handleChange}\r\n        deleteTodoProps={delTodo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoContainer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//component file\r\nimport TodoContainer from \"./components/TodoContainer\";\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}